/* boilerplate start */

html {
    box-sizing: border-box;
    overflow: hidden;
} *, *::before, *::after {
    box-sizing: inherit;
}

body {
    padding: 0;
    margin: 0;
    font-size: 100%;
    font-family: "Archivo", sans-serif;
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    height: 100vh;
} h1, h2, h3, p {
    margin: 0;
} a {
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
} a:hover {
    text-decoration: underline;
} ul, ol {
    list-style: none;
}

:root {
    --coral: #fabbab;
    --white: #F2F5FF;
    --blue: rgb(71, 121, 152);
    --light-blue: rgba(71, 121, 152, 0.6);
    --yellow: rgb(250, 243, 162);
    --black: rgb(49, 48, 46);
}

/* boilerplate end */


body {
    background-color: var(--white);
    cursor: default;
}

header {
    padding: 40px;
    flex-grow: 0;
    display: flex;
    justify-content: space-between;
    color: var(--blue);
}

nav {
    display: flex;
    gap: 16px;
}

.logo {
    border: 2px var(--light-blue) solid;
    padding: 6px 12px;
    font-weight: 700;
    transition: all 120ms;
}
.logo:hover {
    border-color: var(--blue);
    text-decoration: none;
}
.logo:active {
    transform: translateY(1px);
}

.main-container {
    padding: 0px 40px;
    flex-grow: 1;
    display: flex;
    gap: 36px;
}

footer {
    padding: 40px;
    background-color: var(--black);
    flex-grow: 0;
    color: var(--white);
    margin-top: 40px;
}

.v-separator {
    background-color: var(--light-blue);
    flex: 0 0 1px;
}

.calculator-buttons, .calculator-display {
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
}

.calculator-buttons {
    flex: 0 0 auto;
}
.calculator-display {
    flex: 3 0 0;
    gap: 20px;
}

.numbers, .operators, .others {
    display: grid;
    row-gap: 12px;
    column-gap: 12px;
    border-radius: 32px;
    padding: 20px;
}
.numbers {
    grid-template-rows: repeat(4, 40px);
    grid-template-columns: repeat(3, 40px);
}
.operators {
    grid-template-rows: repeat(2, 40px);
    grid-template-columns: repeat(2, 68px);
    background-color: var(--coral);
}
.others {
    grid-template-rows: repeat(1, 40px);
    grid-template-columns: repeat(3, 40px);
    background-color: var(--yellow);
}

button {
    border-radius: 20px;
    transition: all 140ms;
    color: var(--blue);
    box-shadow: 0px 4px 8px 4px rgba(71, 121, 152, 0.1);
    border: none;
    background-color: inherit;
    cursor: pointer;
}
button:hover {
    box-shadow: 0px 4px 8px 4px rgba(71, 121, 152, 0.2);
    color: var(--black);
}
button:active {
    color: var(--light-blue);
    box-shadow: none;
    transform: translateY(1px);
}

#button-0 {
    grid-column-start: 1;
    grid-column-end: 3;
}

.operator {
    background-color: inherit;
    color: var(--blue);
    font-size: 1.2rem;
    font-weight: 500;
    box-shadow: 0px 4px 8px 4px rgba(71, 121, 152, 0.12);
}

.other {
    background-color: inherit;
    color: var(--blue);
    font-weight: 500;
    box-shadow: 0px 4px 8px 4px rgba(71, 121, 152, 0.12);
}
#button-enter {
    grid-column-start: 1;
    grid-column-end: 3;
}

.verbose-display {
    flex: 2 0 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 12px;
    padding: 20px;
    text-align: end;
    color: var(--light-blue);
    font-style: italic;
    font-weight: 300;
    transition: all 120ms;
}

.verbose-element {
    transition: all 200ms;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
}
.latest, .verbose-display>p:hover {
    color: var(--blue);
} /* apply latest to new verbose AFTER attaching to DOM*/ 

.display-top, .display-middle, .display-bottom {
    color: rgba(71, 121, 152, 0.6);
    /* text-align: center; */
    /* font-size: 1.2em; */
    transition: all 120ms;
}
.display-focus {
    font-size: 2em;
    color: var(--black);
    font-weight: 800;
}
.faded {
    color: rgba(71, 121, 152, 0.3);
}